name: PRD - Deploy - Infrastructure

on:
  workflow_dispatch:
    inputs:
      DEPLOY:
        description: 'Resources to deploy'
        required: true
        type: choice
        options:
          - ec2
          - network
          - network-addons
          - sftp

concurrency: prd

permissions:
  id-token: write
  contents: read

env:
  ssh_key: ${{ secrets.ssh_key }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  DEPLOYER_ROLE_ARN: ${{ secrets.DEPLOYER_ROLE_ARN }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  ENVIRONMENT: ${{ vars.ENVIRONMENT }}
  DOMAIN_CREDENTIALS: ${{ secrets.DOMAIN_CREDENTIALS }}
  FULL_DOMAIN_NAME: ${{ secrets.FULL_DOMAIN_NAME }}

jobs:
  plan:
    name: Pull Request - Lint & Plan - PRD ${{ github.event.inputs.DEPLOY }}
    runs-on: ubuntu-latest
    environment:
      name: prd
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: deploy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url."https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup".insteadOf "https://github.com/emisgroup"
          git config --file .gitmodules github-runner-url https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GH_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - Network
        if: github.event.inputs.DEPLOY == 'network'
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform/network
          framework: terraform

      - name: Run Checkov - Addons
        if: github.event.inputs.DEPLOY == 'network-addons'
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform/addons
          framework: terraform

      - name: Run Checkov - SFTP
        if: github.event.inputs.DEPLOY == 'sftp'
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform/sftp
          framework: terraform

      - name: Run Checkov - EC2
        if: github.event.inputs.DEPLOY == 'ec2'
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform
          framework: terraform

      - name: Plan Network
        if: github.event.inputs.DEPLOY == 'network'
        uses: ./github-runner/actions/terragrunt-plan
        with:
          terraform-folder: "../business-intelligence/terraform/network"
          terragrunt-config: "./terragrunt.hcl"

      - name: Plan Addons
        if: github.event.inputs.DEPLOY == 'network-addons'
        uses: ./github-runner/actions/terragrunt-plan
        with:
          terraform-folder: "../business-intelligence/terraform/addons"
          terragrunt-config: "./terragrunt.hcl"

      - name: Plan SFTP
        if: github.event.inputs.DEPLOY == 'sftp'
        uses: ./github-runner/actions/terragrunt-plan
        with:
          terraform-folder: "../business-intelligence/terraform/sftp"
          terragrunt-config: "./terragrunt.hcl"

      - name: Plan EC2
        if: github.event.inputs.DEPLOY == 'ec2'
        uses: ./github-runner/actions/terragrunt-plan
        with:
          terraform-folder: "../business-intelligence/terraform"
          terragrunt-config: "./terragrunt.hcl"

  deploy-network:
    name: Deploy - PRD ${{ github.event.inputs.DEPLOY }}
    if: github.event.inputs.DEPLOY == 'network' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: prd
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: deploy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url."https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup".insteadOf "https://github.com/emisgroup"
          git config --file .gitmodules github-runner-url https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GH_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - Addons
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform/network
          framework: terraform

  deploy-addons:
    name: Deploy - PRD ${{ github.event.inputs.DEPLOY }}
    if: github.event.inputs.DEPLOY == 'network-addons' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: prd
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: deploy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url."https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup".insteadOf "https://github.com/emisgroup"
          git config --file .gitmodules github-runner-url https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GH_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - Addons
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform/addons
          framework: terraform

      - name: Deploy Addons
        uses: ./github-runner/actions/terragrunt-apply
        with:
          terraform-folder: "../business-intelligence/terraform/addons"
          terragrunt-config: "./terragrunt.hcl"

  deploy-sftp:
    name: Deploy - PRD ${{ github.event.inputs.DEPLOY }}
    if: github.event.inputs.DEPLOY == 'sftp' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: prd
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: deploy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url."https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup".insteadOf "https://github.com/emisgroup"
          git config --file .gitmodules github-runner-url https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GH_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - SFTP
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform/sftp
          framework: terraform

      - name: Deploy SFTP
        uses: ./github-runner/actions/terragrunt-apply
        with:
          terraform-folder: "../business-intelligence/terraform/sftp"
          terragrunt-config: "./terragrunt.hcl"

  deploy-ec2:
    name: Deploy - PRD ${{ github.event.inputs.DEPLOY }}
    if: github.event.inputs.DEPLOY == 'ec2' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: prd
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEPLOYER_ROLE_ARN }}
          role-session-name: deploy-role-session
          aws-region: ${{ vars.AWS_REGION }}

      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          app-id: ${{ secrets.APP_ID }}

      - name: Pull & update submodules recursively
        run: |
          git config --global url."https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup".insteadOf "https://github.com/emisgroup"
          git config --file .gitmodules github-runner-url https://token:${{ secrets.GH_TOKEN }}@github.com/emisgroup/github-runner.git
          git submodule update --init --recursive
        env:
          GH_TOKEN: ${{ steps.get-token.outputs.token }}

      - name: Run Checkov - EC2
        uses: bridgecrewio/checkov-action@master
        with:
          directory: business-intelligence/terraform
          framework: terraform

      - name: Deploy EC2s
        uses: ./github-runner/actions/terragrunt-apply
        with:
          terraform-folder: "../business-intelligence/terraform"
          terragrunt-config: "./terragrunt.hcl"